package service

import (
	"context"

	pb "github.com/rayfiyo/kotatuneko-rest/gen/user"
	"github.com/rayfiyo/kotatuneko-rest/gen/user/rpc"
)

type (
	CreateUserProvider interface {
		Execute(ctx context.Context, request *rpc.CreateUserRequest) (*rpc.CreateUserResponse, error)
	}

	DeleteUserProvider interface {
		Execute(ctx context.Context, request *rpc.DeleteUserRequest) (string, error)
	}

	GetUserByIDProvider interface {
		Execute(ctx context.Context, request *rpc.GetUserByIDRequest) (*rpc.GetUserByIDResponse, error)
	}

	UpdateUserProvider interface {
		Execute(ctx context.Context, request *rpc.UpdateUserRequest) (string, error)
	}
)

type userService struct {
	pb.UnimplementedUserServiceServer
	createUserProvider CreateUserProvider
}

func NewUserService() pb.UserServiceServer {
	return &userService{
		createUserProvider: NewCreateUserProvider(),
	}
}

func (h *grpcGatewayPracticeV1) Echo(ctx context.Context, request *pb.EchoRequest) (*pb.EchoResponse, error) {
	return h.echoProvider.Execute(ctx, request)
}
